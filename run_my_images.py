#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import glob
from pathlib import Path
import subprocess

def find_user_images():
    """‡∏´‡∏≤‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"""

    eye_level_patterns = ['my_images/eye_level/*.jpg', 'my_images/eye_level/*.png', 'my_images/eye_level/*.jpeg']
    top_down_patterns = ['my_images/top_down/*.jpg', 'my_images/top_down/*.png', 'my_images/top_down/*.jpeg']

    eye_level_images = []
    top_down_images = []

    for pattern in eye_level_patterns:
        eye_level_images.extend(glob.glob(pattern))

    for pattern in top_down_patterns:
        top_down_images.extend(glob.glob(pattern))

    return eye_level_images, top_down_images

def main():
    print("üîç OpenCV Homography Matcher - ‡∏£‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
    print("=" * 60)

    # ‡∏´‡∏≤‡∏†‡∏≤‡∏û
    eye_images, top_images = find_user_images()

    if not eye_images:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏†‡∏≤‡∏û Eye-Level ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_images/eye_level/")
        print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô")
        return

    if not top_images:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏†‡∏≤‡∏û Top-Down ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_images/top_down/")
        print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô")
        return

    print(f"üì∑ ‡∏û‡∏ö‡∏†‡∏≤‡∏û Eye-Level: {len(eye_images)} ‡πÑ‡∏ü‡∏•‡πå")
    print(f"üó∫Ô∏è ‡∏û‡∏ö‡∏†‡∏≤‡∏û Top-Down: {len(top_images)} ‡πÑ‡∏ü‡∏•‡πå")

    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏û‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏π‡πà
    for i, eye_img in enumerate(eye_images):
        for j, top_img in enumerate(top_images):
            print(f"\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏π‡πà‡∏ó‡∏µ‡πà {i+1}-{j+1}")
            print(f"   Eye-Level: {os.path.basename(eye_img)}")
            print(f"   Top-Down:  {os.path.basename(top_img)}")

            output_dir = f"my_results/pair_{i+1}_{j+1}"

            try:
                # ‡∏£‡∏±‡∏ô CLI
                cmd = [
                    "C:/Python313/python.exe", "cli.py",
                    "--eye", eye_img,
                    "--top", top_img,
                    "--benchmark",
                    "--output", output_dir
                ]

                result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8')

                if result.returncode == 0:
                    print("   ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                else:
                    print("   ‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")

            except Exception as e:
                print(f"   ‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

    print(f"\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_results/")

if __name__ == "__main__":
    main()
