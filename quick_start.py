#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Quick Start Guide ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô OpenCV Homography Matcher
‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á
"""

import os
import shutil
from pathlib import Path


def setup_user_workspace():
    """
    ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    """
    print("üöÄ OpenCV Homography Matcher - Quick Start Setup")
    print("=" * 60)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    user_dirs = [
        "my_images/eye_level",    # ‡∏†‡∏≤‡∏û‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ï‡∏≤
        "my_images/top_down",     # ‡∏†‡∏≤‡∏û‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà/‡πÇ‡∏î‡∏£‡∏ô
        "my_results",             # ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    ]

    for dir_path in user_dirs:
        os.makedirs(dir_path, exist_ok=True)
        print(f"üìÅ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: {dir_path}")

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    create_usage_examples()

    print("\n‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
    print("\nüìã ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:")
    print("1. ‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û Eye-Level ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_images/eye_level/")
    print("2. ‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û Top-Down ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_images/top_down/")
    print("3. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: python quick_start.py")


def create_usage_examples():
    """
    ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    """

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå batch script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Windows
    batch_content = """@echo off
echo OpenCV Homography Matcher - Quick Start
echo ========================================

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if not exist "my_images\\eye_level\\*.jpg" if not exist "my_images\\eye_level\\*.png" (
    echo ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏†‡∏≤‡∏û Eye-Level ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_images/eye_level/
    echo ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô
    pause
    exit /b
)

if not exist "my_images\\top_down\\*.jpg" if not exist "my_images\\top_down\\*.png" (
    echo ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏†‡∏≤‡∏û Top-Down ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_images/top_down/
    echo ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô
    pause
    exit /b
)

echo üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏†‡∏≤‡∏û...
for %%f in (my_images\\eye_level\\*.jpg my_images\\eye_level\\*.png) do set "EYE_LEVEL=%%f"
for %%f in (my_images\\top_down\\*.jpg my_images\\top_down\\*.png) do set "TOP_DOWN=%%f"

echo üì∑ Eye-Level: %EYE_LEVEL%
echo üó∫Ô∏è Top-Down: %TOP_DOWN%

echo.
echo üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö...
C:/Python313/python.exe cli.py --eye "%EYE_LEVEL%" --top "%TOP_DOWN%" --benchmark --output my_results

echo.
echo ‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_results/
pause
"""

    with open("run_my_images.bat", "w", encoding="utf-8") as f:
        f.write(batch_content)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Python script
    py_content = """#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import glob
from pathlib import Path
import subprocess

def find_user_images():
    \"\"\"‡∏´‡∏≤‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ\"\"\"

    eye_level_patterns = ['my_images/eye_level/*.jpg', 'my_images/eye_level/*.png', 'my_images/eye_level/*.jpeg']
    top_down_patterns = ['my_images/top_down/*.jpg', 'my_images/top_down/*.png', 'my_images/top_down/*.jpeg']

    eye_level_images = []
    top_down_images = []

    for pattern in eye_level_patterns:
        eye_level_images.extend(glob.glob(pattern))

    for pattern in top_down_patterns:
        top_down_images.extend(glob.glob(pattern))

    return eye_level_images, top_down_images

def main():
    print("üîç OpenCV Homography Matcher - ‡∏£‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
    print("=" * 60)

    # ‡∏´‡∏≤‡∏†‡∏≤‡∏û
    eye_images, top_images = find_user_images()

    if not eye_images:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏†‡∏≤‡∏û Eye-Level ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_images/eye_level/")
        print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô")
        return

    if not top_images:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏†‡∏≤‡∏û Top-Down ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_images/top_down/")
        print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô")
        return

    print(f"üì∑ ‡∏û‡∏ö‡∏†‡∏≤‡∏û Eye-Level: {len(eye_images)} ‡πÑ‡∏ü‡∏•‡πå")
    print(f"üó∫Ô∏è ‡∏û‡∏ö‡∏†‡∏≤‡∏û Top-Down: {len(top_images)} ‡πÑ‡∏ü‡∏•‡πå")

    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏û‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏π‡πà
    for i, eye_img in enumerate(eye_images):
        for j, top_img in enumerate(top_images):
            print(f"\\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏π‡πà‡∏ó‡∏µ‡πà {i+1}-{j+1}")
            print(f"   Eye-Level: {os.path.basename(eye_img)}")
            print(f"   Top-Down:  {os.path.basename(top_img)}")

            output_dir = f"my_results/pair_{i+1}_{j+1}"

            try:
                # ‡∏£‡∏±‡∏ô CLI
                cmd = [
                    "C:/Python313/python.exe", "cli.py",
                    "--eye", eye_img,
                    "--top", top_img,
                    "--benchmark",
                    "--output", output_dir
                ]

                result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8')

                if result.returncode == 0:
                    print("   ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                else:
                    print("   ‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")

            except Exception as e:
                print(f"   ‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

    print(f"\\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå my_results/")

if __name__ == "__main__":
    main()
"""

    with open("run_my_images.py", "w", encoding="utf-8") as f:
        f.write(py_content)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå README ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    readme_content = """# ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á

## üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

### 1. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏†‡∏≤‡∏û
- ‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û **Eye-Level** (‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ï‡∏≤) ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå `my_images/eye_level/`
- ‡∏ß‡∏≤‡∏á‡∏†‡∏≤‡∏û **Top-Down** (‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô/‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà) ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå `my_images/top_down/`

### 2. ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö

**‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ Batch Script (Windows)**
```bash
run_my_images.bat
```

**‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ Python Script**
```bash
python run_my_images.py
```

**‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏ä‡πâ CLI ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á**
```bash
python cli.py --eye my_images/eye_level/your_photo.jpg --top my_images/top_down/map.jpg --benchmark
```

### 3. ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå `my_results/`

## üì∏ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
- JPG, JPEG, PNG
- ‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: 500x500 ‡∏ñ‡∏∂‡∏á 2000x2000 pixels
- ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ä‡πâ‡∏≤

## üí° ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ

### ‡∏†‡∏≤‡∏û Eye-Level
- ‡∏ñ‡πà‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏Ñ‡∏ô
- ‡∏°‡∏µ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô
- ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏•‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏±‡πà‡∏ô‡πÑ‡∏´‡∏ß
- ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô

### ‡∏†‡∏≤‡∏û Top-Down
- ‡∏ñ‡πà‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡πÇ‡∏î‡∏£‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
- ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏û Eye-Level
- ‡∏°‡∏µ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏õ‡∏•‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ‡∏ä‡∏±‡∏î
- ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏á‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏á‡∏™‡∏∞‡∏ó‡πâ‡∏≠‡∏ô‡∏°‡∏≤‡∏Å

## üéØ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á

### Confidence Score
- **0.7-1.0**: ‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏° - ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á
- **0.5-0.7**: ‡∏î‡∏µ - ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
- **0.3-0.5**: ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á - ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
- **< 0.3**: ‡∏ï‡πà‡∏≥ - ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ

### ‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
- `matches_visualization.jpg` - ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà
- `comparison.jpg` - ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß
- `transformed_eye_level.jpg` - ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏õ‡∏•‡∏á

## ‚ùì ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤

### ‡πÑ‡∏°‡πà‡∏û‡∏ö matches ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠
- ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô feature detector
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏†‡∏≤‡∏û‡∏°‡∏µ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
- ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏†‡∏≤‡∏û

### ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏°‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
- ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
- ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ detector ‡∏≠‡∏∑‡πà‡∏ô

## üìû ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:
1. ‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ
2. ‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô
3. ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡πÄ‡∏ö‡∏•‡∏≠‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
"""

    with open("my_images/README.md", "w", encoding="utf-8") as f:
        f.write(readme_content)

    print("üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:")
    print("   ‚Ä¢ run_my_images.bat (Windows batch script)")
    print("   ‚Ä¢ run_my_images.py (Python script)")
    print("   ‚Ä¢ my_images/README.md (‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)")


def main():
    setup_user_workspace()


if __name__ == "__main__":
    main()
